import matplotlib.pyplot as plt
import numpy as np

# Walter Russell's Octave Spiral Simulation
# Octaves as logarithmic spiral: r = a * e^(b * theta), b = log(phi)/ (2*pi) for golden ratio spiral
phi = (1 + np.sqrt(5)) / 2  # Golden ratio ~1.618
theta = np.linspace(0, 9 * 2 * np.pi, 1000)  # 9 octaves (0 to 9*2pi)
r = np.exp((np.log(phi) / (2 * np.pi)) * theta)  # Log spiral with golden angle

# Plot the spiral
fig, ax = plt.subplots(figsize=(8, 8), subplot_kw=dict(projection='polar'))
ax.plot(theta, r, color='gold', linewidth=2, label='Russell Octave Spiral')
ax.set_title("Walter Russell's Octave Spiral: From Hydrogen to Transuranics")
ax.set_theta_zero_location('N')  # Start at top
ax.set_rlabel_position(0)
ax.grid(True)
ax.legend()

# Annotate octaves (elements as points on spiral)
octave_points = [i * 2 * np.pi for i in range(10)]  # 10 points for 9 octaves
r_points = np.exp((np.log(phi) / (2 * np.pi)) * np.array(octave_points))
for i, th in enumerate(octave_points):
    ax.annotate(f'Octave {i}', xy=(th, r_points[i]), xytext=(th + 0.5, r_points[i] + 0.1), 
                arrowprops=dict(arrowstyle='->', color='white'), color='white')

plt.savefig('russell_octave_spiral.png', dpi=300, bbox_inches='tight')
plt.show()
print("Graph saved as 'russell_octave_spiral.png' â€“ Golden spiral with octave annotations.")