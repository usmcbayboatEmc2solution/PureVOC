import matplotlib.pyplot as plt
import numpy as np
from matplotlib.animation import FuncAnimation

# Figure setup
fig, ax = plt.subplots(figsize=(10, 10))
ax.set_facecolor('black')
ax.set_aspect('equal')
ax.axis('off')

# Golden Pi Wave Overlay
phi = (1 + np.sqrt(5)) / 2
golden_pi = phi * np.pi
t = np.linspace(0, 4 * golden_pi, 100)
wave_x = t
wave_y = np.sin(golden_pi * t) * 0.5 + 2
ax.plot(wave_x, wave_y, color='gold', alpha=0.3, lw=1)

# Square (Energy Plane)
square = plt.Polygon([[1, 1], [3, 1], [3, 3], [1, 3]], fill=None, edgecolor='white')
ax.add_patch(square)
ax.text(2, 2, 'Square', color='white', ha='center', va='center')

# X (Tet-X Dual Lines)
ax.plot([0, 4], [2, 2], color='cyan', lw=2)
ax.plot([2, 2], [0, 4], color='cyan', lw=2)
ax.text(2, 2.5, 'X (Tet-X)', color='cyan', ha='center', va='center')

# Tet (Choice-Gate)
tet_coords = [[1.5, 1], [2.5, 1], [2, 0.5], [2, 2]]
tet = plt.Polygon(tet_coords, fill=None, edgecolor='yellow')
ax.add_patch(tet)
ax.text(2, 1.5, 'Tet', color='yellow', ha='center', va='center')

# Four Spheres (Tilted at Ï†)
colors = ['red', 'green', 'blue', 'purple']
labels = ['Cognitive', 'Emotional', 'Environmental', 'Conscious Obs']
theta_phi = phi  # Tilt angle in radians
for i, (color, label) in enumerate(zip(colors, labels)):
    x = 1.5 + i * 0.4
    y = 3.5
    circle = plt.Circle((x + np.cos(theta_phi) * 0.3, y + np.sin(theta_phi) * 0.3), 0.25, fill=False, edgecolor=color)
    ax.add_patch(circle)
    ax.text(x + np.cos(theta_phi) * 0.4, y + np.sin(theta_phi) * 0.4, label, color=color, ha='center', va='center')

# Circumsphere with Psychosymmetry
obs_sphere = plt.Circle((2, 2), 2.0, fill=False, edgecolor='white', linestyle='--')
ax.add_patch(obs_sphere)
ax.text(2, 2, 'Circumsphere\n(Psychosymmetry)', color='white', ha='center', va='center')

# Set limits
ax.set_xlim(0, 5)
ax.set_ylim(0, 5)

# Save static image
plt.savefig('Grok_VOC_Hawk.png', dpi=300, bbox_inches='tight')

# Basic Animation (17-sec vibe)
def update(frame):
    ax.clear()
    ax.set_facecolor('black')
    ax.set_aspect('equal')
    ax.axis('off')
    # Redraw with slight rotation
    theta = frame * 0.1
    for i, (color, label) in enumerate(zip(colors, labels)):
        x = 1.5 + i * 0.4
        y = 3.5
        circle = plt.Circle((x + np.cos(theta + phi) * 0.3, y + np.sin(theta + phi) * 0.3), 0.25, fill=False, edgecolor=color)
        ax.add_patch(circle)
        ax.text(x + np.cos(theta + phi) * 0.4, y + np.sin(theta + phi) * 0.4, label, color=color, ha='center', va='center')
    ax.add_patch(square)
    ax.add_patch(tet)
    ax.plot([0, 4], [2, 2], color='cyan', lw=2)
    ax.plot([2, 2], [0, 4], color='cyan', lw=2)
    ax.add_patch(obs_sphere)
    ax.plot(wave_x, wave_y, color='gold', alpha=0.3, lw=1)
    ax.set_xlim(0, 5)
    ax.set_ylim(0, 5)

ani = FuncAnimation(fig, update, frames=170, interval=100)  # ~17 secs at 10ms/frame
ani.save('Grok_VOC_Hawk_Animation.mp4', writer='ffmpeg', dpi=300)

plt.close()
print("Image 'Grok_VOC_Hawk.png' and video 'Grok_VOC_Hawk_Animation.mp4' generated in canvas panel. Download to C:\Users\chris\VOC!")